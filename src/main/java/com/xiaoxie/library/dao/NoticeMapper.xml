<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoxie.library.dao.NoticeMapper">

    <resultMap id="BaseResultMap" type="com.xiaoxie.library.pojo.Notice">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="creator" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , title, content, creator, create_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from notice
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from notice
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.xiaoxie.library.pojo.Notice">
        insert into notice (id, title, content,
                            creator, create_time)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.xiaoxie.library.pojo.Notice">
        insert into notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.xiaoxie.library.pojo.Notice">
        update notice
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.xiaoxie.library.pojo.Notice">
        update notice
        set title       = #{title,jdbcType=VARCHAR},
            content     = #{content,jdbcType=VARCHAR},
            creator     = #{creator,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAllNotice" parameterType="notice" resultType="notice">
        select
        <include refid="Base_Column_List"/>
        from notice
        <where>
            <if test="title !=null and title !=''">
                and title like "%#{title}%"
            </if>
            <if test="content !=null and content !=''">
                and content like "%#{content}%"
            </if>
            <if test="creator !=null and creator !=''">
                and creator like "%#{creator}%"
            </if>
        </where>
        order by create_time desc
    </select>

    <delete id="deleteNoticeByIds" parameterType="list">
        delete from notice where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectByTitle" resultType="notice">
        select title
        from notice
        where title = #{title}
    </select>

</mapper>