<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoxie.library.dao.BookMapper">

    <resultMap id="BaseResultMap" type="com.xiaoxie.library.pojo.Book">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="book_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="press" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="book_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="book_description" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="book_language" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="book_price" javaType="java.lang.Double" jdbcType="DOUBLE"/>
            <arg column="publication_time" javaType="java.util.Date" jdbcType="DATE"/>
            <arg column="type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="book_status" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , book_name, author, press, book_number, book_description, book_language, book_price,
    publication_time, type_name, book_status
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from book
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.xiaoxie.library.pojo.Book">
        insert into book (id, book_name, author,
                          press, book_number, book_description,
                          book_language, book_price, publication_time,
                          type_name, book_status)
        values (#{id,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
                #{press,jdbcType=VARCHAR}, #{bookNumber,jdbcType=VARCHAR}, #{bookDescription,jdbcType=VARCHAR},
                #{bookLanguage,jdbcType=VARCHAR}, #{bookPrice,jdbcType=DOUBLE}, #{publicationTime,jdbcType=DATE},
                #{typeName,jdbcType=VARCHAR}, #{bookStatus,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.xiaoxie.library.pojo.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="press != null">
                press,
            </if>
            <if test="bookNumber != null">
                book_number,
            </if>
            <if test="bookDescription != null">
                book_description,
            </if>
            <if test="bookLanguage != null">
                book_language,
            </if>
            <if test="bookPrice != null">
                book_price,
            </if>
            <if test="publicationTime != null">
                publication_time,
            </if>
            <if test="typeName != null">
                type_name,
            </if>
            <if test="bookStatus != null">
                book_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="press != null">
                #{press,jdbcType=VARCHAR},
            </if>
            <if test="bookNumber != null">
                #{bookNumber,jdbcType=VARCHAR},
            </if>
            <if test="bookDescription != null">
                #{bookDescription,jdbcType=VARCHAR},
            </if>
            <if test="bookLanguage != null">
                #{bookLanguage,jdbcType=VARCHAR},
            </if>
            <if test="bookPrice != null">
                #{bookPrice,jdbcType=DOUBLE},
            </if>
            <if test="publicationTime != null">
                #{publicationTime,jdbcType=DATE},
            </if>
            <if test="typeName != null">
                #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="bookStatus != null">
                #{bookStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.xiaoxie.library.pojo.Book">
        update book
        <set>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="press != null">
                press = #{press,jdbcType=VARCHAR},
            </if>
            <if test="bookNumber != null">
                book_number = #{bookNumber,jdbcType=VARCHAR},
            </if>
            <if test="bookDescription != null">
                book_description = #{bookDescription,jdbcType=VARCHAR},
            </if>
            <if test="bookLanguage != null">
                book_language = #{bookLanguage,jdbcType=VARCHAR},
            </if>
            <if test="bookPrice != null">
                book_price = #{bookPrice,jdbcType=DOUBLE},
            </if>
            <if test="publicationTime != null">
                publication_time = #{publicationTime,jdbcType=DATE},
            </if>
            <if test="typeName != null">
                type_name = #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="bookStatus != null">
                book_status = #{bookStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.xiaoxie.library.pojo.Book">
        update book
        set book_name        = #{bookName,jdbcType=VARCHAR},
            author           = #{author,jdbcType=VARCHAR},
            press            = #{press,jdbcType=VARCHAR},
            book_number      = #{bookNumber,jdbcType=VARCHAR},
            book_description = #{bookDescription,jdbcType=VARCHAR},
            book_language    = #{bookLanguage,jdbcType=VARCHAR},
            book_price       = #{bookPrice,jdbcType=DOUBLE},
            publication_time = #{publicationTime,jdbcType=DATE},
            type_name        = #{typeName,jdbcType=VARCHAR},
            book_status      = #{bookStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAllBook" parameterType="book" resultType="book">
        select id, book_name, author, press, book_number, book_description, book_language, book_price,publication_time,
        type_name, book_status
        from book
        <where>
            book_status=0
            <if test="bookName !=null and bookName !=''">
                and book_name like "%"#{bookName}"%"
            </if>
            <if test="author != null and author !=''">
                and author like "%"#{author}"%"
            </if>
            <if test="bookNumber !=null and bookNumber !=''">
                and book_number like "%"#{bookNumber}"%"
            </if>
            <if test="typeName !=null and typeName !=''">
                and type_name like "%"#{typeName}"%"
            </if>
        </where>
    </select>

    <delete id="deleteBookByIds" parameterType="list">
        delete from book where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectByBookName" resultType="book">
        select book_name
        from book
        where book_name = #{bookName}
    </select>

    <select id="selectBookNumber" resultType="int">
        select count(*)
        from book
    </select>

    <update id="updateBookStatusById" parameterType="list">
        update book set book_status=0
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>