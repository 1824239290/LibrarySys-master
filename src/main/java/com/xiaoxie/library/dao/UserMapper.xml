<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoxie.library.dao.UserMapper">

    <resultMap id="BaseResultMap" type="com.xiaoxie.library.pojo.User">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="real_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="birthday" javaType="java.util.Date" jdbcType="DATE"/>
            <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="tel" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="library_card" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_status" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , username, password, user_type, real_name, sex, birthday, address, tel, email,
    create_date, library_card, user_status
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.xiaoxie.library.pojo.User">
        insert into user (id, username, password,
                          user_type, real_name, sex,
                          birthday, address, tel,
                          email, create_date, library_card,
                          user_status)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{userType,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
                #{birthday,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{libraryCard,jdbcType=VARCHAR},
                #{userStatus,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.xiaoxie.library.pojo.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="libraryCard != null">
                library_card,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="libraryCard != null">
                #{libraryCard,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.xiaoxie.library.pojo.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="libraryCard != null">
                library_card = #{libraryCard,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.xiaoxie.library.pojo.User">
        update user
        set username     = #{username,jdbcType=VARCHAR},
            password     = #{password,jdbcType=VARCHAR},
            user_type    = #{userType,jdbcType=INTEGER},
            real_name    = #{realName,jdbcType=VARCHAR},
            sex          = #{sex,jdbcType=VARCHAR},
            birthday     = #{birthday,jdbcType=DATE},
            address      = #{address,jdbcType=VARCHAR},
            tel          = #{tel,jdbcType=VARCHAR},
            email        = #{email,jdbcType=VARCHAR},
            create_date  = #{createDate,jdbcType=TIMESTAMP},
            library_card = #{libraryCard,jdbcType=VARCHAR},
            user_status  = #{userStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByUserName" resultType="user">
        select username
        from user
        where username = #{username}
    </select>

    <select id="selectTelAndEmailByUsername" resultType="user">
        select username, tel, email
        from user
        where username = #{username}
    </select>

    <update id="updatePasswordByTelAndEmail">
        update user
        <set>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR}
            </if>
        </set>
        <where>
            <if test="username != null and username != ''">
                and username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="tel != null and tel != ''">
                and tel = #{tel,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != ''">
                and email = #{email,jdbcType=VARCHAR}
            </if>
        </where>
    </update>

    <select id="selectUserTypeByUP" resultType="user">
        select id, username, user_type, user_status
        from user
        where username = #{username}
          and password = #{password}
    </select>

    <select id="selectPasswordById" resultType="user">
        select password
        from user
        where id = #{id}
    </select>

    <update id="updatePasswordById">
        update user
        set password=#{password}
        where id = #{id}
    </update>

    <select id="selectUserNumber" resultType="int">
        select count(*)
        from user
        where user_status = 1
    </select>

    <select id="selectAllUser" parameterType="user" resultType="user">
        select id,username, real_name, sex, birthday, address, tel, email,create_date, library_card, user_status
        from user
        <where>
            user_type=2
            <if test="username !=null and username !=''">
                and username like "%"#{username}"%"
            </if>
            <if test="realName != null and realName !=''">
                and real_name like "%"#{realName}"%"
            </if>
            <if test="sex !=null and sex !=''">
                and sex like "%"#{sex}"%"
            </if>
            <if test="libraryCard !=null and libraryCard !=''">
                and library_card like "%"#{libraryCard}"%"
            </if>
        </where>
    </select>

    <delete id="deleteUserByIds" parameterType="list">
        delete from user where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updatePwdById" parameterType="int">
        update user
        set password=123456
        where id = #{id}
    </update>

    <select id="selectAllAdminUser" parameterType="user" resultType="user">
        select id,username, real_name, sex, birthday, address, tel, email,create_date, library_card, user_status
        from user
        <where>
            user_type=1
            <if test="username !=null and username !=''">
                and username like "%"#{username}"%"
            </if>
            <if test="realName != null and realName !=''">
                and real_name like "%"#{realName}"%"
            </if>
            <if test="sex !=null and sex !=''">
                and sex like "%"#{sex}"%"
            </if>
            <if test="libraryCard !=null and libraryCard !=''">
                and library_card like "%"#{libraryCard}"%"
            </if>
        </where>
    </select>

    <select id="selectUserByLibraryCard" resultType="user">
        select username
        from user
        where library_card = #{libraryCard}
    </select>

</mapper>