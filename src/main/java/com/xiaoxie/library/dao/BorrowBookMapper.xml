<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoxie.library.dao.BorrowBookMapper">

    <resultMap id="BaseResultMap" type="com.xiaoxie.library.pojo.BorrowBook">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="book_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="library_card" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reader_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="borrow_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="return_book_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="return_book_type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , book_id, library_card, reader_id, borrow_time, return_book_time, return_book_type,remark
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="borrowBook">
        select
        <include refid="Base_Column_List"/>
        from borrowbook
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from borrowbook
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.xiaoxie.library.pojo.BorrowBook">
        insert into borrowbook (id, book_id, library_card,
                                reader_id, borrow_time, return_book_time,
                                return_book_type, remark)
        values (#{id,jdbcType=INTEGER},
                #{bookId,jdbcType=INTEGER},
                #{libraryCard,jdbcType=VARCHAR},
                #{readerId,jdbcType=INTEGER},
                #{borrowTime,jdbcType=TIMESTAMP},
                #{returnBookTime,jdbcType=TIMESTAMP},
                #{returnBookType,jdbcType=INTEGER}),
            #{remark,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.xiaoxie.library.pojo.BorrowBook">
        insert into borrowbook
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookId != null">
                book_id,
            </if>
            <if test="libraryCard != null">
                library_card,
            </if>
            <if test="readerId != null">
                reader_id,
            </if>
            <if test="borrowTime != null">
                borrow_time,
            </if>
            <if test="returnBookTime != null">
                return_book_time,
            </if>
            <if test="returnBookType != null">
                return_book_type,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookId != null">
                #{bookId,jdbcType=INTEGER},
            </if>
            <if test="libraryCard != null">
                #{libraryCard,jdbcType=VARCHAR},
            </if>
            <if test="readerId != null">
                #{readerId,jdbcType=INTEGER},
            </if>
            <if test="borrowTime != null">
                #{borrowTime,jdbcType=TIMESTAMP},
            </if>
            <if test="returnBookTime != null">
                #{returnBookTime,jdbcType=TIMESTAMP},
            </if>
            <if test="returnBookType != null">
                #{returnBookType,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.xiaoxie.library.pojo.BorrowBook">
        update borrowbook
        <set>
            <if test="bookId != null">
                book_id = #{bookId,jdbcType=INTEGER},
            </if>
            <if test="libraryCard != null">
                library_card = #{libraryCard,jdbcType=VARCHAR},
            </if>
            <if test="readerId != null">
                reader_id = #{readerId,jdbcType=INTEGER},
            </if>
            <if test="borrowTime != null">
                borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
            </if>
            <if test="returnBookTime != null">
                return_book_time = #{returnBookTime,jdbcType=TIMESTAMP},
            </if>
            <if test="returnBookType != null">
                return_book_type = #{returnBookType,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.xiaoxie.library.pojo.BorrowBook">
        update borrowbook
        set book_id          = #{bookId,jdbcType=INTEGER},
            library_card     = #{libraryCard,jdbcType=VARCHAR},
            reader_id        = #{readerId,jdbcType=INTEGER},
            borrow_time      = #{borrowTime,jdbcType=TIMESTAMP},
            return_book_time = #{returnBookTime,jdbcType=TIMESTAMP},
            return_book_type = #{returnBookType,jdbcType=INTEGER},
            remark           = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAllBorrowBookNumber" resultType="int">
        select count(*)
        from borrowbook
    </select>

    <resultMap id="borrowBookMap" type="borrowBook">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="book_id" jdbcType="INTEGER" property="bookId"/>
        <result column="library_card" jdbcType="VARCHAR" property="libraryCard"/>
        <result column="reader_id" jdbcType="INTEGER" property="readerId"/>
        <result column="borrow_time" jdbcType="TIMESTAMP" property="borrowTime"/>
        <result column="return_book_time" jdbcType="TIMESTAMP" property="returnBookTime"/>
        <result column="return_book_type" jdbcType="INTEGER" property="returnBookType"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>

        <association property="book" javaType="book">
            <id column="id" property="id"/>
            <result column="book_name" property="bookName"></result>
        </association>

        <association property="user" javaType="user">
            <id column="id" property="id"/>
            <result column="username" property="username"></result>
        </association>

    </resultMap>

    <select id="selectAllBorrowBook" parameterType="borrowBook" resultMap="borrowBookMap">
        select borrow.*, book.book_name, users.username
        from borrowbook borrow
        left join book book
        on borrow.book_id = book.id
        left join user users
        on users.id = borrow.reader_id
        <where>
            <if test="book !=null">
                <if test="book.bookName !=null and book.bookName != ''">
                    and book.book_name like "%"#{book.bookName}"%"
                </if>
            </if>
            <if test="user !=null">
                <if test="user.username !=null and user.username !=''">
                    and users.username like "%"#{user.username}"%"
                </if>
            </if>
            <if test="libraryCard !=null and libraryCard !=''">
                and borrow.library_card like "%"#{libraryCard}"%"
            </if>
            <if test="returnBookType !=null">
                and borrow.return_book_type = #{returnBookType}
            </if>
        </where>
        order by borrow.borrow_time desc
    </select>

    <select id="selectCounts" parameterType="int" resultType="int">
        select count(*)
        from borrowbook
        where return_book_type = 4
          and reader_id = #{readerId}
    </select>

    <select id="queryBorrowBookList" resultMap="borrowBookMap">
        select
        a.*,
        b.book_name,
        c.username
        from borrowbook a
        left join book b
        on a.book_id = b.id
        left join user c
        on c.id = a.reader_id
        <where>
            <if test="bookId != null">
                and b.id = #{bookId}
            </if>
            <if test="readerId != null">
                and c.id = #{readerId}
            </if>
        </where>
        order by a.id desc
    </select>

    <update id="updateBorrowBookStatusById">
        update borrowbook
        <set>
            <if test="borrowBook.returnBookTime != null">
                return_book_time = #{borrowBook.returnBookTime,jdbcType=TIMESTAMP},
            </if>
            <if test="borrowBook.returnBookType != null">
                return_book_type = #{borrowBook.returnBookType,jdbcType=INTEGER},
            </if>
        </set>
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteBorrowBookByIds" parameterType="list">
        delete from borrowbook where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>